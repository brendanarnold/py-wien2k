
>>> import wien2k
>>> import numpy as np
>>> from wien2k.utils import expand_ibz
>>> test_data = np.array([ 
...   [1,0,0,0,1.1],  
...   [2,0,0,1,1.2],  
...   [3,0,1,0,1.0],  
...   [4,0,1,1,1.1],  
...   [5,1,0,0,1.2],  
...   [6,1,0,1,1.2],  
...   [7,1,1,0,1.2], 
...   [8,1,1,1,1.0]])


Test if identity works

>>> sms = [wien2k.SymMat(matrix=np.identity(3))]
>>> expand_ibz(sym_mats=sms, ibz_data=test_data, sort_by=[0])
array([[ 1. ,  0. ,  0. ,  0. ,  1.1],
       [ 2. ,  0. ,  0. ,  1. ,  1.2],
       [ 3. ,  0. ,  1. ,  0. ,  1. ],
       [ 4. ,  0. ,  1. ,  1. ,  1.1],
       [ 5. ,  1. ,  0. ,  0. ,  1.2],
       [ 6. ,  1. ,  0. ,  1. ,  1.2],
       [ 7. ,  1. ,  1. ,  0. ,  1.2],
       [ 8. ,  1. ,  1. ,  1. ,  1. ]])

Test if real case works

>>> import wien2k
>>> klist_rdr = wien2k.KlistReader(TiC_klist_filename)
>>> klist_rdr.data
array([[  1.,   0.,   0.,   0.,  10.,   1.],
       [  2.,   1.,   1.,  -1.,  10.,   8.],
       [  3.,   2.,   2.,  -2.,  10.,   8.],
       [  4.,   3.,   3.,  -3.,  10.,   8.],
       [  5.,   4.,   4.,  -4.,  10.,   8.],
       [  6.,   5.,   5.,  -5.,  10.,   4.],
       [  7.,   2.,   0.,   0.,  10.,   6.],
       [  8.,   3.,   1.,  -1.,  10.,  24.],
       [  9.,   4.,   2.,  -2.,  10.,  24.],
       [ 10.,   5.,   3.,  -3.,  10.,  24.],
       [ 11.,   6.,   4.,  -4.,  10.,  24.],
       [ 12.,   7.,   5.,  -5.,  10.,  24.],
       [ 13.,   8.,   6.,  -6.,  10.,  24.],
       [ 14.,   9.,   7.,  -7.,  10.,  24.],
       [ 15.,  10.,   8.,  -8.,  10.,  12.],
       [ 16.,   4.,   0.,   0.,  10.,   6.],
       [ 17.,   5.,   1.,  -1.,  10.,  24.],
       [ 18.,   6.,   2.,  -2.,  10.,  24.],
       [ 19.,   7.,   3.,  -3.,  10.,  24.],
       [ 20.,   8.,   4.,  -4.,  10.,  24.],
       [ 21.,   9.,   5.,  -5.,  10.,  24.],
       [ 22.,  10.,   6.,  -6.,  10.,  12.],
       [ 23.,   6.,   0.,   0.,  10.,   6.],
       [ 24.,   7.,   1.,  -1.,  10.,  24.],
       [ 25.,   8.,   2.,  -2.,  10.,  24.],
       [ 26.,   9.,   3.,  -3.,  10.,  24.],
       [ 27.,  10.,   4.,  -4.,  10.,  12.],
       [ 28.,   8.,   0.,   0.,  10.,   6.],
       [ 29.,   9.,   1.,  -1.,  10.,  24.],
       [ 30.,  10.,   2.,  -2.,  10.,  12.],
       [ 31.,  10.,   0.,   0.,  10.,   3.],
       [ 32.,   4.,   2.,   0.,  10.,  24.],
       [ 33.,   5.,   3.,  -1.,  10.,  48.],
       [ 34.,   6.,   4.,  -2.,  10.,  48.],
       [ 35.,   7.,   5.,  -3.,  10.,  24.],
       [ 36.,   6.,   2.,   0.,  10.,  24.],
       [ 37.,   7.,   3.,  -1.,  10.,  48.],
       [ 38.,   8.,   4.,  -2.,  10.,  48.],
       [ 39.,   9.,   5.,  -3.,  10.,  48.],
       [ 40.,  10.,   6.,  -4.,  10.,  24.],
       [ 41.,   8.,   2.,   0.,  10.,  24.],
       [ 42.,   9.,   3.,  -1.,  10.,  48.],
       [ 43.,  10.,   4.,  -2.,  10.,  24.],
       [ 44.,  10.,   2.,   0.,  10.,  12.],
       [ 45.,   8.,   4.,   0.,  10.,  24.],
       [ 46.,   9.,   5.,  -1.,  10.,  24.],
       [ 47.,  10.,   4.,   0.,  10.,  12.]])
>>>

